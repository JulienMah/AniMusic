{"ast":null,"code":"import * as $ from \"jquery\";\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport * as i0 from \"@angular/core\";\n/*Accès à l'api Spotify JS*/\n\nconst Spotify = require('spotify-web-api-js');\n\nlet spotify = new SpotifyWebApi();\nexport let SpotifyComponent = /*#__PURE__*/(() => {\n  class SpotifyComponent {\n    constructor() {\n      this.token = \"\";\n    }\n\n    ngOnInit() {\n      console.log(\"SPOTIFY-COMPONENT Token = \" + this.token);\n      spotify.setAccessToken(this.token);\n      spotify.getMe().then(function (data) {}).catch(function (err) {\n        console.log('Something went wrong:', err.message);\n      });\n    }\n    /**\r\n     * Permet de se connecter à l'API Spotify\r\n     */\n\n\n    loginSpotify() {\n      // Fonction qui permet d'extraite le token client de l'URL du Site\n      const getUrlParameter = sParam => {\n        let sPageURL = window.location.search.substring(1),\n            sURLVariables = sPageURL != undefined && sPageURL.length > 0 ? sPageURL.split('#') : [],\n            sParameterName,\n            i;\n        let split_str = window.location.href.length > 0 ? window.location.href.split('#') : [];\n        sURLVariables = split_str != undefined && split_str.length > 1 && split_str[1].length > 0 ? split_str[1].split('&') : [];\n\n        for (i = 0; i < sURLVariables.length; i++) {\n          sParameterName = sURLVariables[i].split('=');\n\n          if (sParameterName[0] === sParam) {\n            return sParameterName[1] === undefined ? true : decodeURIComponent(sParameterName[1]);\n          }\n        }\n\n        return null;\n      }; // Le token d'accès est stocké dans cette variable\n\n\n      let accessToken = getUrlParameter('access_token');\n      /* BLOC CONNEXION */\n\n      let client_id = '9231b9552fe24c8d94e2f5ed995bac83';\n      /* URL du site pour la redirection après connexion (lien à encoder via le site ci-dessous) :\r\n      https://www.url-encode-decode.com/ */\n\n      let redirect_uri = 'https%3A%2F%2Fjulienmah.github.io%2FAniMusic%2F';\n      const redirect = `https://accounts.spotify.com/authorize?client_id=${client_id}&response_type=token&redirect_uri=${redirect_uri}`;\n\n      if (accessToken == null || accessToken == \"\" || accessToken == undefined) {\n        window.location.replace(redirect);\n      }\n      /* On stock dans la variable d'instance du composant accueil le Token de connexion */\n\n\n      this.token = accessToken.toString();\n      console.log(\"Le token d'accès est : \" + this.token);\n    }\n    /**\r\n     * Permet de chercher un nombre de \"max_songs\" correspondant à la recherche de\r\n     * l'utilisateur et de lui permettre de jouer ces sons\r\n     */\n\n\n    chercherSons() {\n      let raw_search_query = $('#son').val();\n      raw_search_query = raw_search_query.toString();\n      let search_query = encodeURI(raw_search_query);\n      $.ajax({\n        url: `https://api.spotify.com/v1/search?q=${search_query}&type=track`,\n        type: 'GET',\n        headers: {\n          'Authorization': 'Bearer ' + this.token\n        },\n        success: function (data) {\n          let num_of_tracks = data.tracks.items.length;\n          let count = 0;\n          const max_songs = 8;\n\n          while (count < max_songs && count < num_of_tracks) {\n            let id = data.tracks.items[count].id;\n            /* AJOUT */\n\n            spotify.getTrack(id).then(function (data) {\n              console.log(data);\n            }, function (err) {\n              console.error(err);\n            });\n            let src_str = `https://open.spotify.com/embed/track/${id}`;\n            let iframe = `<div class='song'><iframe src=${src_str} frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe></div>`;\n            let parent_div = $('#song_' + count);\n            parent_div.html(iframe);\n            count++;\n          }\n        }\n      });\n    }\n\n  }\n\n  SpotifyComponent.ɵfac = function SpotifyComponent_Factory(t) {\n    return new (t || SpotifyComponent)();\n  };\n\n  SpotifyComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SpotifyComponent,\n    selectors: [[\"app-spotify\"]],\n    inputs: {\n      token: \"token\"\n    },\n    decls: 26,\n    vars: 0,\n    consts: [[\"type\", \"button\", 1, \"btn-default\", \"animation-on-browser\", 3, \"click\"], [1, \"col-lg-8\"], [1, \"card\", \"card-chart\"], [1, \"card-header\"], [\"id\", \"nom_user\"], [\"id\", \"son\", \"required\", \"\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"animation-on-hover\", 3, \"click\"], [1, \"container\"], [1, \"row\"], [\"id\", \"song_0\", 1, \"col\"], [\"id\", \"song_1\", 1, \"col\"], [\"id\", \"song_2\", 1, \"col\"], [\"id\", \"song_3\", 1, \"col\"], [\"id\", \"song_4\", 1, \"col\"], [\"id\", \"song_5\", 1, \"col\"], [\"id\", \"song_6\", 1, \"col\"], [\"id\", \"song_7\", 1, \"col\"]],\n    template: function SpotifyComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function SpotifyComponent_Template_button_click_0_listener() {\n          return ctx.loginSpotify();\n        });\n        i0.ɵɵtext(1, \"Connexion\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelementStart(5, \"h4\");\n        i0.ɵɵelement(6, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"h3\");\n        i0.ɵɵtext(8, \" Saisir artiste / titre : \\u00A0 \");\n        i0.ɵɵelement(9, \"input\", 5);\n        i0.ɵɵtext(10, \" \\u00A0 \\u00A0 \\u00A0 \");\n        i0.ɵɵelementStart(11, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function SpotifyComponent_Template_button_click_11_listener() {\n          return ctx.chercherSons();\n        });\n        i0.ɵɵtext(12, \" Rechercher \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 7);\n        i0.ɵɵelementStart(14, \"div\", 8);\n        i0.ɵɵelement(15, \"div\", 9);\n        i0.ɵɵelement(16, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 8);\n        i0.ɵɵelement(18, \"div\", 11);\n        i0.ɵɵelement(19, \"div\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 8);\n        i0.ɵɵelement(21, \"div\", 13);\n        i0.ɵɵelement(22, \"div\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 8);\n        i0.ɵɵelement(24, \"div\", 15);\n        i0.ɵɵelement(25, \"div\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"\"]\n  });\n  return SpotifyComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}